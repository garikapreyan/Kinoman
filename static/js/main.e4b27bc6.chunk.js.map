{"version":3,"sources":["localStorage/index.js","components/Authorization/Login/styles.js","components/Authorization/Login/index.js","components/Authorization/index.js","constants.js","actions/favourites.js","actions/search.js","containers/Authorization/index.js","actions/loginlogout.js","components/NavBar/index.js","components/NavBar/styles.js","containers/NavBar/index.js","components/Pagination/index.js","actions/pagination.js","components/Pagination/styles.js","components/Movies/styles.js","components/Movie/index.js","components/Movie/styles.js","containers/Movie/index.js","components/Loader/index.js","components/Movies/index.js","containers/Movies/index.js","actions/movies.js","components/MainPage/index.js","components/MoviePage/styles.js","components/MoviePage/index.js","containers/MoviePage/index.js","components/Favourites/styles.js","components/Favourites/index.js","containers/Favourites/index.js","components/Search/styles.js","components/Search/index.js","containers/Search/index.js","App.js","reducers/movies.js","reducers/reducers.js","reducers/favourites.js","reducers/search.js","reducers/index.js","configureStore.js","registerServiceWorker.js","index.js","images/login-back.jpg"],"names":["setItem","obj","localStorage","JSON","stringify","root","height","display","flexDirection","alignItems","justifyContent","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","inputs","width","margin","boxShadow","border","button","Login","this","props","classes","handleSubmit","className","onSubmit","Field","name","component","type","placeholder","Component","reduxForm","form","injectSheet","styles","Authorization","submit","bind","values","username","password","undefined","newName","trim","newPass","currentUser","isAuth","NEXT_PAGE","PREV_PAGE","addToFavourites","movieId","payload","removeFromFavourites","getSearch","str","curPage","favourites","dispatch","fetch","then","res","json","data","results","receiveSearch","connect","info","NavBar","state","query","handleLogOutSubmit","handleChange","e","setState","target","value","preventDefault","history","push","console","log","logOut","Link","to","navbarItem","floatLeft","input","onChange","onClick","color","textDecoration","position","right","borderRadius","padding","transition","outline","marginRight","Pagination","handlePrevClick","handleNextClick","prevPage","nextPage","pages","movie","nextPrevPage","page","nextPageAction","prevPageAction","marginBottom","popular","flexWrap","paddingTop","backgroundAttachment","empty","Movie","favourite","isFavourite","id","img","src","poster_path","alt","title","movieName","icon","aria-hidden","opacity","textAlign","bottom","fontWeight","backgroundColor","fontSize","cursor","Loader","Movies","getMovies","prevProps","movies","isMoviesFetching","map","i","key","response","receivePosts","MainPage","card","background","marginTop","description","overview","image","alignSelf","MoviePage","getMovie","match","params","filter","item","toString","length","noMovies","Favourites","getFavouriteMovies","favouriteMovies","isFavouritesFetching","ids","forEach","Search","searchedMovies","App","localIsAuth","getItem","parse","Route","path","Redirect","LogInLogOut","initialState","action","some","combineReducers","Object","assign","formReducer","loggerMiddleware","createLogger","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.e4b27bc6.chunk.js","sourcesContent":["export const setItem = (obj) => {\r\n  localStorage.setItem('currentUser', JSON.stringify(obj));\r\n};\r\n\r\nexport const getItem = () => {\r\n  const item = localStorage.getItem('currentUser');\r\n  if(item === null)\r\n    return {};\r\n  return JSON.parse(item);\r\n};","import backgroundImage from '../../../images/login-back.jpg';\r\n\r\nexport default {\r\n  root: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundImage: `url(${backgroundImage})`,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    backgroundRepeat: 'no-repeat'\r\n  },\r\n\r\n  inputs: {\r\n    width: '300px',\r\n    margin: '25px 0',\r\n    '&:focus': {\r\n      boxShadow: 'none',\r\n      border: 'gray'\r\n    }\r\n  },\r\n\r\n  button: {\r\n    width: '100px',\r\n    '&:focus': {\r\n      boxShadow: 'none'\r\n    }\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport injectSheet from 'react-jss';\r\n\r\nimport styles from './styles';\r\n\r\nclass Login extends Component {\r\n  render() {\r\n    const { classes, handleSubmit } = this.props;\r\n    return (\r\n      <form className={classes.root} onSubmit={handleSubmit}>\r\n        <Field className={`${classes.inputs} form-control`} name='username' component='input' type='text' placeholder='Username'/>\r\n        <Field className={`${classes.inputs} form-control`} name='password' component='input' type='password' placeholder='Password'/>\r\n        <button className={`${classes.button} btn btn-dark`} type='submit'>LogIn</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nLogin = reduxForm({\r\n  form: 'loginForm'\r\n})(Login);\r\n\r\nexport default injectSheet(styles)(Login);\r\n","import React, { Component } from 'react';\r\n\r\nimport Login from \"./Login\";\r\nimport { setItem } from '../../localStorage';\r\n\r\nclass Authorization extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.submit = this.submit.bind(this);\r\n  }\r\n\r\n  submit(values) {\r\n\r\n    const { username, password } = values;\r\n    if(username !== undefined && password !== undefined) {\r\n      const newName = username.trim();\r\n      const newPass = password.trim();\r\n\r\n      if (newName === '' || newPass === '') {\r\n        return null;\r\n      }\r\n\r\n      const currentUser = {\r\n        username: username,\r\n        password: password,\r\n        isAuth: true\r\n      };\r\n\r\n      this.props.values(currentUser);\r\n      setItem(currentUser);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Login\r\n          onSubmit={this.submit}\r\n        />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Authorization;","export const LOGIN_ACTION = 'LOGIN_ACTION';\r\nexport const LOGOUT_ACTION = 'LOGOUT_ACTION';\r\n\r\nexport const REQUEST_POSTS = 'REQUEST_POSTS';\r\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS';\r\n\r\nexport const NEXT_PAGE = 'NEXT_PAGE';\r\nexport const PREV_PAGE = 'PREV_PAGE';\r\n\r\nexport const ADD_TO_FAVOURITES = 'ADD_TO_FAVOURITES';\r\nexport const REMOVE_FROM_FAVOURITES = 'REMOVE_FROM_FAVOURITES';\r\nexport const REQUEST_FAVOURITES = 'REQUEST_FAVOURITES';\r\nexport const RECEIVE_FAVOURITES = 'RECEIVE_FAVOURITES';\r\n\r\nexport const REQUEST_SEARCH = 'REQUEST_SEARCH';\r\nexport const RECEIVE_SEARCH = 'RECEIVE_SEARCH';","import fetch from 'cross-fetch';\r\nimport {\r\n  ADD_TO_FAVOURITES,\r\n  REMOVE_FROM_FAVOURITES,\r\n  REQUEST_FAVOURITES,\r\n  RECEIVE_FAVOURITES\r\n} from '../constants';\r\n\r\nexport const addToFavourites = (movieId) => ({\r\n  type: ADD_TO_FAVOURITES,\r\n  payload: {\r\n    movieId\r\n  }\r\n});\r\n\r\nexport const removeFromFavourites = (movieId) => ({\r\n  type: REMOVE_FROM_FAVOURITES,\r\n  payload: {\r\n    movieId\r\n  }\r\n});\r\n\r\nconst requestFavourites = () => ({\r\n  type: REQUEST_FAVOURITES\r\n});\r\n\r\nconst receiveFavourites = (movie) => ({\r\n  type: RECEIVE_FAVOURITES,\r\n  payload: movie\r\n});\r\n\r\nexport const getFavouriteMovies = (ids) => {\r\n  return dispatch => {\r\n    if(ids.length)\r\n      dispatch(requestFavourites());\r\n    ids.forEach(id => {\r\n      fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=418a2c57e3a40a68638d0017f189fca9&language=en-US`)\r\n        .then(res => res.json())\r\n        .then(data => dispatch(receiveFavourites(data)));\r\n     });\r\n  }\r\n};","import fetch from 'cross-fetch';\r\n\r\nimport {\r\n  REQUEST_SEARCH,\r\n  RECEIVE_SEARCH\r\n} from '../constants';\r\n\r\nconst requestSearch = () => ({\r\n  type: REQUEST_SEARCH\r\n});\r\n\r\nconst receiveSearch = (data, favourites) => ({\r\n  type: RECEIVE_SEARCH,\r\n  payload: {\r\n    data: data.results,\r\n    favourites\r\n  }\r\n});\r\n\r\nconst getSearch = (str, curPage, favourites) => {\r\n  return (dispatch) => {\r\n    dispatch(requestSearch());\r\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=418a2c57e3a40a68638d0017f189fca9&language=en-US&query=${str}&page=${curPage}&include_adult=false`)\r\n      .then(res => res.json())\r\n      .then(data => dispatch(receiveSearch(data, favourites)));\r\n  }\r\n};\r\n\r\nexport default getSearch;","import { connect } from 'react-redux';\r\n\r\nimport Authorization from '../../components/Authorization'\r\nimport {logInAction} from \"../../actions\";\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  values: (info) => dispatch(logInAction(info))\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(Authorization);","import {\r\n  LOGIN_ACTION,\r\n  LOGOUT_ACTION\r\n} from '../constants';\r\n\r\nexport const logInAction = (state) => ({\r\n  type: LOGIN_ACTION,\r\n  payload: state\r\n});\r\n\r\nexport const logOutAction = () => ({\r\n  type: LOGOUT_ACTION\r\n});\r\n","import React, { Component } from 'react';\r\nimport injectSheet from 'react-jss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport styles from './styles';\r\nimport {setItem} from '../../localStorage';\r\n\r\nclass NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      query: ''\r\n    };\r\n\r\n    this.handleLogOutSubmit = this.handleLogOutSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({\r\n      query: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    if(this.state.query)\r\n      this.props.history.push(`/Kinoman/search/${this.state.query}`);\r\n  }\r\n\r\n  handleLogOutSubmit() {\r\n    console.log('fdjsf');\r\n    const curUser = {\r\n      username: '',\r\n      password: '',\r\n      isAuth: false\r\n    };\r\n    setItem(curUser);\r\n    this.props.logOut();\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <nav className={`navbar fixed-top navbar-dark bg-dark`}>\r\n        <Link to={'/Kinoman/movies/popular'} className={'navbar-brand'}>KINOMAN</Link>\r\n        <Link to={'/Kinoman/favourites'} className={`${classes.navbarItem} ${classes.floatLeft}`}>Favourites</Link>\r\n        <form onSubmit={this.handleSubmit} className={classes.form}>\r\n          <input className={classes.input} placeholder={'Search'} onChange={this.handleChange}/>\r\n        </form>\r\n        <Link to={'/Kinoman/login'} className={classes.navbarItem} onClick={this.handleLogOutSubmit}>Log Out</Link>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectSheet(styles)(NavBar);","export default {\r\n  navbarItem: {\r\n    color: 'white',\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      color: 'rgb(255, 255, 255, .5)',\r\n      textDecoration: 'none'\r\n    }\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  input: {\r\n    width: '250px',\r\n    height: '30px',\r\n    border: 'none',\r\n    position: 'fixed',\r\n    right: '100px',\r\n    borderRadius: '1000px',\r\n    padding: '0 10px',\r\n    transition: 'width 1s',\r\n    '&:focus': {\r\n      outline: 0,\r\n      width: '300px'\r\n    }\r\n  },\r\n  floatLeft: {\r\n    marginRight: 'auto'\r\n  }\r\n};","import { connect } from 'react-redux';\r\n\r\nimport NavBar from '../../components/NavBar';\r\nimport { logOutAction } from \"../../actions\";\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  logOut: () => dispatch(logOutAction())\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(NavBar);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport injectSheet from 'react-jss';\r\n\r\nimport styles from './styles';\r\nimport {nextPageAction, prevPageAction} from \"../../actions\";\r\n\r\nclass Pagination extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handlePrevClick = this.handlePrevClick.bind(this);\r\n    this.handleNextClick = this.handleNextClick.bind(this);\r\n  }\r\n\r\n  handlePrevClick() {\r\n    let { curPage } = this.props;\r\n    if(curPage > 1)\r\n      this.props.prevPage(--curPage);\r\n  }\r\n\r\n  handleNextClick() {\r\n    let { curPage } = this.props;\r\n    if(curPage < 994)\r\n      this.props.nextPage(++curPage);\r\n  }\r\n\r\n  render() {\r\n    const { classes, curPage } = this.props;\r\n    return (\r\n      <ul className={`${classes.pages} pagination`}>\r\n          <li className={`${classes.movie} page-item`}>\r\n            <Link to={`/Kinoman/movies/popular?page=${curPage === 1 ? curPage : curPage-1}`} className={`btn btn-outline-none btn-dark`} onClick={this.handlePrevClick}>Previous</Link>\r\n          </li>\r\n        <li className='page-item'>\r\n          <Link to={`/Kinoman/movies/popular?page=${curPage+1}`} className={`${classes.movie} btn btn-outline-none btn-dark`} onClick={this.handleNextClick}>Next</Link>\r\n        </li>\r\n      </ul>);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    curPage: state.nextPrevPage.curPage\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  nextPage: (page) => {dispatch(nextPageAction(page))},\r\n  prevPage: (page) => {dispatch(prevPageAction(page))}\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectSheet(styles)(Pagination));","import {\r\n  NEXT_PAGE,\r\n  PREV_PAGE\r\n} from '../constants';\r\n\r\nexport const nextPageAction = (page) => ({\r\n  type: NEXT_PAGE,\r\n  payload: page\r\n});\r\n\r\nexport const prevPageAction = (page) => ({\r\n  type: PREV_PAGE,\r\n  payload: page\r\n});\r\n","export default {\r\n  pages: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n    marginBottom: '50px'\r\n  },\r\n\r\n  movie: {\r\n    '&:focus': {\r\n      outline: 0\r\n    }\r\n  }\r\n};","import backgroundImage from '../../images/login-back.jpg';\r\n\r\nexport default {\r\n  popular: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    position: 'relative',\r\n    paddingTop: '100px',\r\n    backgroundImage: `url(${backgroundImage})`,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundAttachment: 'fixed'\r\n  },\r\n  empty: {\r\n    height: '100%',\r\n    backgroundImage: `url(${backgroundImage})`,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundAttachment: 'fixed'\r\n  }\r\n};","import React, {Component, Fragment} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport injectSheet from 'react-jss';\r\n\r\nimport styles from './styles';\r\n\r\nclass Movie extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.favourite = this.favourite.bind(this);\r\n  }\r\n\r\n  favourite(isFavourite, movieId) {\r\n    const { addToFavourites, removeFromFavourites } = this.props;\r\n    isFavourite ? removeFromFavourites(movieId) : addToFavourites(movieId);\r\n  }\r\n\r\n  render() {\r\n    const { movie, classes } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Link to={`/Kinoman/movie/${movie.id}`} className={classes.movie}>\r\n          <img className={classes.img} src={`http://image.tmdb.org/t/p/w185/${movie.poster_path}`} alt={movie.title}/>\r\n          <p className={classes.movieName}>{movie.title}</p>\r\n        </Link>\r\n        <i className={`fa ${movie.isFavourite ? 'fa-heart' : 'fa-heart-o'} ${classes.icon}`}\r\n           aria-hidden=\"true\"\r\n           onClick={() => this.favourite(movie.isFavourite, movie.id)}/>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectSheet(styles)(Movie);","export default {\r\n  movie: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    textDecoration: \"none\",\r\n    width: \"190px\",\r\n    margin: '-10px 10px',\r\n    '&:hover': {\r\n      textDecoration: 'none',\r\n      '&>p': {\r\n        opacity: 1\r\n      }\r\n    }\r\n  },\r\n\r\n  img: {\r\n    height: '280px',\r\n    width: '190px',\r\n    borderRadius: '5px'\r\n  },\r\n\r\n  movieName: {\r\n    width: '190px',\r\n    height: '50px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    position: 'relative',\r\n    bottom: '50px',\r\n    color: 'red',\r\n    fontWeight: 'bold',\r\n    backgroundColor: 'rgba(0, 0, 0, .7)',\r\n    opacity: 0,\r\n    transition: 'opacity .5s',\r\n    borderRadius: '0 0 5px 5px'\r\n  },\r\n\r\n  icon: {\r\n    height: '30px',\r\n    width: '30px',\r\n    position: 'relative',\r\n    bottom: '7px',\r\n    right: '45px',\r\n    fontSize: '30px',\r\n    color: 'red',\r\n    cursor: 'pointer'\r\n  }\r\n}","import { connect } from 'react-redux';\r\n\r\nimport Movie from '../../components/Movie';\r\nimport {addToFavourites, removeFromFavourites} from \"../../actions\";\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addToFavourites: (id) => dispatch(addToFavourites(id)),\r\n  removeFromFavourites: (id) => dispatch(removeFromFavourites(id))\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(Movie);","import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className={'page'}>\r\n      <div className={'loader'}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;","import React, { Component, Fragment } from 'react';\r\nimport injectSheet from 'react-jss';\r\n\r\nimport Pagination from \"../Pagination\";\r\nimport styles from './styles';\r\nimport Movie from \"../../containers/Movie\";\r\nimport Loader from \"../Loader\";\r\n\r\nclass Movies extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isFavourite: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { getMovies, curPage, favourites } = this.props;\r\n    console.log('Favs',favourites);\r\n    getMovies(curPage, favourites);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { getMovies, curPage, favourites } = this.props;\r\n    if(prevProps.curPage !== curPage) {\r\n      getMovies(curPage, favourites);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes, movies, isMoviesFetching } = this.props;\r\n    return (\r\n      <Fragment>\r\n        {\r\n          !isMoviesFetching ? (\r\n            <div className={classes.popular}>\r\n              {movies.map((movie, i) => <Movie movie={movie} key={i}/>)}\r\n              <Pagination/>\r\n            </div>\r\n          ) : (\r\n            <Loader/>\r\n          )\r\n        }\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectSheet(styles)(Movies);","import { connect } from 'react-redux';\r\n\r\nimport Movies from '../../components/Movies';\r\nimport {\r\n  getMovies,\r\n  addToFavourites,\r\n  removeFromFavourites\r\n} from '../../actions';\r\n\r\nconst mapStateToProps = state => ({\r\n  movies: state.movies,\r\n  isMoviesFetching: state.isMoviesFetching,\r\n  curPage: state.nextPrevPage.curPage,\r\n  favourites: state.favourites\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getMovies: (curPage, favourites) => dispatch(getMovies(curPage, favourites)),\r\n  addToFavourites: (id) => dispatch(addToFavourites(id)),\r\n  removeFromFavourites: (id) => dispatch(removeFromFavourites(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Movies);","import fetch from 'cross-fetch'\r\nimport {\r\n  REQUEST_POSTS,\r\n  RECEIVE_POSTS\r\n} from \"../constants\";\r\n\r\nconst requestPosts = () => {\r\n  return {\r\n    type: REQUEST_POSTS\r\n  }\r\n};\r\n\r\nconst receivePosts = (data, favourites) => ({\r\n  type: RECEIVE_POSTS,\r\n  payload: {\r\n    data: data.results,\r\n    favourites\r\n  }\r\n});\r\n\r\nexport const getMovies = (curPage, favourites) => {\r\n  console.log('Favs1', favourites);\r\n  return dispatch => {\r\n    dispatch(requestPosts());\r\n    return fetch(`https://api.themoviedb.org/3/movie/popular?api_key=418a2c57e3a40a68638d0017f189fca9&language=en-US&page=${curPage}`)\r\n      .then(response => response.json())\r\n      .then(data => dispatch(receivePosts(data, favourites)))\r\n  }\r\n};\r\n\r\n\r\n","import React, {Component, Fragment} from 'react';\r\n\r\nimport NavBar from '../../containers/NavBar';\r\nimport Movies from '../../containers/Movies';\r\n\r\nclass MainPage extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <NavBar history={this.props.history}/>\r\n        <Movies/>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;","import backgroundImage from '../../images/login-back.jpg';\r\n\r\nexport default {\r\n  root: {\r\n    height: '100%',\r\n    padding: '100px',\r\n    backgroundImage: `url(${backgroundImage})`,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundAttachment: 'fixed'\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    border: '1px solid gray',\r\n    borderRadius: '10px',\r\n    background: 'rgba(46, 46, 46, .8)',\r\n    color: 'red'\r\n  },\r\n\r\n  title: {\r\n    marginTop: '20px'\r\n  },\r\n\r\n  description: {\r\n    display: 'flex'\r\n  },\r\n\r\n  overview: {\r\n    margin: '70px 20px 0 0'\r\n  },\r\n\r\n  image: {\r\n    width: '250px',\r\n    alignSelf: 'flex-start',\r\n    margin: '50px',\r\n    borderRadius: '10px'\r\n  }\r\n};","import React, { Component } from 'react';\r\nimport injectSheet from 'react-jss';\r\n\r\nimport styles from './styles';\r\nimport NavBar from '../../containers/NavBar';\r\n\r\nclass MoviePage extends Component {\r\n  getMovie = () => {\r\n    const { movies } = this.props;\r\n    const { id } = this.props.match.params;\r\n    const movie = movies.filter((item) => (item.id.toString()===id.toString()));\r\n    return movie.length !== 0 ? movie[0] : [{}];\r\n  };\r\n\r\n  render() {\r\n    const movie = this.getMovie();\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <NavBar history={this.props.history}/>\r\n        <div className={classes.card}>\r\n          <h1 className={classes.title}>{movie.title}</h1>\r\n          <div className={classes.description}>\r\n            <img className={classes.image} src={`http://image.tmdb.org/t/p/w185/${movie.poster_path}`} alt={movie.title}/>\r\n            <p className={classes.overview}>{movie.overview}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectSheet(styles)(MoviePage);","import { connect } from 'react-redux';\r\n\r\nimport MoviePage from '../../components/MoviePage';\r\n\r\nconst mapStateToProps = state => ({\r\n  movies: state.movies\r\n});\r\n\r\nexport default connect(mapStateToProps)(MoviePage);","import backgroundImage from \"../../images/login-back.jpg\";\r\n\r\nexport default {\r\n  popular: {\r\n    height: '100%',\r\n    backgroundImage: `url(${backgroundImage})`,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundAttachment: 'fixed',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    paddingTop: '100px'\r\n  },\r\n  noMovies: {\r\n    height: '95%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    color: 'red'\r\n  }\r\n};","import React, {Component, Fragment} from 'react';\r\nimport injectSheet from 'react-jss';\r\n\r\nimport styles from './styles';\r\n\r\nimport Loader from '../Loader';\r\nimport Movie from '../../containers/Movie';\r\nimport NavBar from \"../../containers/NavBar\";\r\n\r\nclass Favourites extends Component {\r\n  componentDidMount() {\r\n    const { getFavouriteMovies, favourites } = this.props;\r\n    getFavouriteMovies(favourites);\r\n  }\r\n\r\n  render() {\r\n    const { classes, favouriteMovies, isFavouritesFetching } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <NavBar history={this.props.history}/>\r\n        <div className={classes.popular}>\r\n          {\r\n            !isFavouritesFetching ? (\r\n              favouriteMovies.length ? (\r\n                favouriteMovies.map((movie, i) =>\r\n                  <Movie movie={movie} key={i}/>\r\n                )\r\n              ) : (\r\n                <h3 className={classes.noMovies}>There aren`t favourite movies!</h3>\r\n              )\r\n            ) : (\r\n              <Loader/>\r\n            )\r\n          }\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectSheet(styles)(Favourites);","import { connect } from 'react-redux';\r\n\r\nimport Favourites from '../../components/Favourites';\r\n\r\nimport {\r\n  getFavouriteMovies\r\n} from '../../actions';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  favourites: state.favourites,\r\n  favouriteMovies: state.favouriteMovies,\r\n  isFavouritesFetching: state.isFavouritesFetching\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getFavouriteMovies: (ids) => dispatch(getFavouriteMovies(ids))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favourites);","import backgroundImage from \"../../images/login-back.jpg\";\r\n\r\nexport default {\r\n  popular: {\r\n    backgroundImage: `url(${backgroundImage})`,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundAttachment: 'fixed',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    paddingTop: '100px'\r\n  },\r\n  noMovies: {\r\n    height: '95%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    color: 'red'\r\n  }\r\n};","import React, { Component, Fragment } from 'react';\r\nimport injectSheet from 'react-jss';\r\n\r\nimport Movie from \"../../containers/Movie\";\r\nimport Pagination from \"../Pagination\";\r\nimport Loader from \"../Loader\";\r\n\r\nimport styles from './styles';\r\nimport NavBar from \"../NavBar\";\r\n\r\nclass Search extends Component {\r\n  componentDidMount() {\r\n    const { getSearch, curPage, match, favourites } = this.props;\r\n    console.log(curPage, match.params.query);\r\n    getSearch(match.params.query, curPage, favourites);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { getSearch, curPage, favourites } = this.props;\r\n    if(prevProps.curPage !== curPage) {\r\n      const { query } = this.props.match.params;\r\n      getSearch(query, curPage, favourites);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes, movies, isMoviesFetching } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <NavBar history={this.props.history}/>\r\n        {\r\n          !isMoviesFetching ? (\r\n            movies.length ?\r\n              <div className={classes.popular}>\r\n                {movies.map((movie, i) => <Movie movie={movie} key={i}/>)}\r\n                <Pagination/>\r\n              </div> : <h3 className={classes.noMovies}>Movies not found!</h3>\r\n          ) : (\r\n            <Loader/>\r\n          )\r\n        }\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectSheet(styles)(Search);","import { connect } from 'react-redux';\r\n\r\nimport Search from '../../components/Search';\r\n\r\nimport {\r\n  getSearch\r\n} from '../../actions'\r\n\r\nconst mapStateToProps = state => ({\r\n  movies: state.searchedMovies,\r\n  isMoviesFetching: state.isMoviesFetching,\r\n  curPage: state.nextPrevPage.curPage,\r\n  favourites: state.favourites\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getSearch: (str, curPage, favourites) => dispatch(getSearch(str, curPage, favourites))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","import React, { Component, Fragment} from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getItem } from './localStorage';\r\nimport Authorization from \"./containers/Authorization\";\r\nimport MainPage from \"./components/MainPage\";\r\nimport MoviePage from \"./containers/MoviePage\";\r\nimport Favourites from './containers/Favourites';\r\nimport Search from './containers/Search';\r\n\r\nclass App extends Component {\r\n  render() {\r\n   const localIsAuth = getItem().isAuth;\r\n    const { isAuth } =this.props;\r\n    return (\r\n      <Router>\r\n        <Fragment>\r\n          <Route path='/Kinoman/movies/popular' component={MainPage}/>\r\n          <Route path='/Kinoman/login' component={Authorization}/>\r\n          <Route path={`/Kinoman/movie/:id`} component={MoviePage}/>\r\n          <Route path={'/Kinoman/favourites'} component={Favourites} />\r\n          <Route path={'/Kinoman/search/:query'} component={Search}/>\r\n          {localIsAuth || isAuth ? <Redirect to='/Kinoman/movies/popular'/> : <Redirect to='/Kinoman/login'/>}\r\n        </Fragment>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { isAuth } = state.LogInLogOut;\r\n  return {\r\n    isAuth\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import {\r\n  REQUEST_POSTS,\r\n  RECEIVE_POSTS,\r\n  ADD_TO_FAVOURITES,\r\n  REMOVE_FROM_FAVOURITES,\r\n  REQUEST_SEARCH,\r\n  RECEIVE_SEARCH\r\n} from \"../constants\";\r\n\r\n\r\nexport const isMoviesFetching = (state = false, action) => {\r\n  switch (action.type) {\r\n    case REQUEST_POSTS:\r\n      return true;\r\n    case RECEIVE_POSTS:\r\n      return false;\r\n    case REQUEST_SEARCH:\r\n      return true;\r\n    case RECEIVE_SEARCH:\r\n      return false;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\nconst initialState = [];\r\n\r\nexport const movies = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case REQUEST_POSTS:\r\n      return initialState;\r\n    case RECEIVE_POSTS:\r\n      return action.payload.data.map(item => ({\r\n        ...item,\r\n        isFavourite: action.payload.favourites.some(movie => movie === item.id)\r\n      }));\r\n    case ADD_TO_FAVOURITES:\r\n      return state.map(item => item.id === action.payload.movieId ? {\r\n        ...item,\r\n        isFavourite: true\r\n      } : item);\r\n    case REMOVE_FROM_FAVOURITES:\r\n      return state.map(item => item.id === action.payload.movieId ? {\r\n        ...item,\r\n        isFavourite: false\r\n      } : item);\r\n    default:\r\n      return initialState;\r\n  }\r\n};","import {LOGIN_ACTION, LOGOUT_ACTION, NEXT_PAGE, PREV_PAGE} from '../constants';\r\n\r\nconst initialState = {\r\n  username: '',\r\n  password: '',\r\n  isAuth: false\r\n};\r\n\r\nexport const LogInLogOut = (state = initialState, action) => {\r\n\r\n  switch(action.type) {\r\n    case LOGIN_ACTION:\r\n      return action.payload;\r\n    case LOGOUT_ACTION:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function nextPrevPage(state = {curPage: 1}, action) {\r\n  switch(action.type) {\r\n    case PREV_PAGE:\r\n      return Object.assign({}, state, {\r\n        curPage: action.payload\r\n      });\r\n    case NEXT_PAGE:\r\n      return Object.assign({}, state, {\r\n        curPage: action.payload\r\n      });\r\n    default:\r\n      return {curPage: 1};\r\n  }\r\n}","import {\r\n  ADD_TO_FAVOURITES, RECEIVE_FAVOURITES,\r\n  REMOVE_FROM_FAVOURITES, REQUEST_FAVOURITES\r\n} from '../constants';\r\n\r\nconst initialState = [];\r\n\r\nexport const favourites = (state=initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_FAVOURITES: {\r\n      const { movieId } = action.payload;\r\n      return state.some(item => item === movieId) ? [...state] : [movieId, ...state];\r\n    }\r\n    case REMOVE_FROM_FAVOURITES: {\r\n      const { movieId } = action.payload;\r\n      return state.filter(item => item !== movieId);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const isFavouritesFetching = (state = false, action) => {\r\n  switch (action.type) {\r\n    case REQUEST_FAVOURITES:\r\n      return true;\r\n    case RECEIVE_FAVOURITES:\r\n      return false;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\nexport const favouriteMovies = (state = [], action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_FAVOURITES:\r\n      return state.some(movie => movie.id === action.payload.id) ? [...state] : [{ isFavourite: true, ...action.payload }, ...state];\r\n    case REMOVE_FROM_FAVOURITES:\r\n      return state.filter(movie => movie.id !== action.payload.movieId);\r\n    default:\r\n      return state;\r\n  }\r\n};","import {\r\n  REQUEST_SEARCH,\r\n  RECEIVE_SEARCH\r\n} from \"../constants\";\r\n\r\n\r\nconst searchedMovies = (state = [], action) => {\r\n  switch (action.type) {\r\n    case REQUEST_SEARCH:\r\n      return [];\r\n    case RECEIVE_SEARCH:\r\n      return action.payload.data.map(item => ({\r\n        ...item,\r\n        isFavourite: action.payload.favourites.some(movie => movie === item.id)\r\n      }));\r\n    default:\r\n      return [];\r\n  }\r\n};\r\n\r\nexport default searchedMovies;","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nimport {\r\n  isMoviesFetching,\r\n  movies\r\n} from './movies';\r\nimport {\r\n  LogInLogOut,\r\n  nextPrevPage,\r\n} from \"./reducers\";\r\nimport {\r\n  favourites,\r\n  favouriteMovies,\r\n  isFavouritesFetching\r\n} from './favourites';\r\nimport searchedMovies from './search';\r\n\r\nexport default combineReducers({\r\n  isMoviesFetching,\r\n  movies,\r\n  LogInLogOut,\r\n  nextPrevPage,\r\n  favourites,\r\n  favouriteMovies,\r\n  isFavouritesFetching,\r\n  searchedMovies,\r\n  form: formReducer\r\n})","import { createStore,compose, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from './reducers';\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport default function configureStore() {\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    // compose(\r\n    //   applyMiddleware(\r\n    //     thunkMiddleware,\r\n    //     loggerMiddleware\r\n    //   )\r\n    //   // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    // ),\r\n    applyMiddleware(\r\n      thunkMiddleware,\r\n      loggerMiddleware\r\n    )\r\n  )\r\n}","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './styles.css';\r\n\r\nimport App from './App';\r\nimport configureStore from './configureStore';\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\nregisterServiceWorker();","module.exports = __webpack_public_path__ + \"static/media/login-back.4de70e25.jpg\";"],"sourceRoot":""}